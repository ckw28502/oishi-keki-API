name: oishi_keki pipeline
on:
  push:
    branches: ["**"]
  pull_request:
    branches: ["main"]
jobs:
  test:
    name: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: check event name
        run: echo ${{ github.event_name }}

      - name: Install dependencies
        run: npm ci

      - name: Run unit tests
        run: npm run test:unit
        env:
          DOTENV_PRIVATE_KEY_TEST: ${{ secrets.DOTENV_PRIVATE_KEY_TEST }}

      - name: Install c8
        run: npm install c8

      - name: Run BDD test
        run: npx c8 -r lcov npm run test:bdd
        env:
          DOTENV_PRIVATE_KEY_TEST: ${{ secrets.DOTENV_PRIVATE_KEY_TEST }}

      - name: SonarQube Scan
        if: ${{ github.event_name == 'pull_request' }}
        uses: SonarSource/sonarqube-scan-action@v5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  check-version:
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'pull_request' }}
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Compare version
        id: version_check
        run: |
          git fetch origin main
          OLD_VERSION=$(git show origin/main:package.json | jq -r '.version')
          NEW_VERSION=$(jq -r '.version' package.json)

          echo "Old version: $OLD_VERSION"
          echo "New version: $NEW_VERSION"

          if [ "$OLD_VERSION" == "$NEW_VERSION" ]; then
            echo "❌ Version has not been updated!"
            exit 1
          fi

          echo "✅ Version bump detected."

      - name: Approve version bump
        run: echo "Version bump check passed."